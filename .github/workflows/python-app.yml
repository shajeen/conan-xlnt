# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x86_64]
        include:
          - os: ubuntu-latest
            conan_profile: default
          - os: windows-latest
            conan_profile: default
          - os: macos-latest
            conan_profile: default

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install conan
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Extract version from tag
      id: get_version
      run: echo "::set-output name=VERSION::${GITHUB_REF#refs/tags/v}"
    - name: Update README.md with new version
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        sed -i "s/xlnt\/[0-9]\+\.[0-9]\+\.[0-9]\+/xlnt\/${VERSION}/g" README.md
    - name: Commit updated README.md
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add README.md
        git commit -m "docs: Update version to ${{ env.VERSION }} in README.md" || exit 0
    - name: Create Conan package
      run: |
        conan create . --build=missing
    - name: Export Conan package
      run: |
        conan export-pkg . --force -o shared=False
    - name: Create package archive
      run: |
        VERSION=${{ steps.get_version.outputs.VERSION }}
        PACKAGE_PATH=$(conan cache path xlnt/${VERSION}@)
        if [ "${{ runner.os }}" == "Windows" ]; then
          7z a xlnt-${VERSION}-${{ runner.os }}-${{ matrix.arch }}.zip $PACKAGE_PATH
        else
          zip -r xlnt-${VERSION}-${{ runner.os }}-${{ matrix.arch }}.zip $PACKAGE_PATH
        fi
    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: xlnt-${{ steps.get_version.outputs.VERSION }}-${{ runner.os }}-${{ matrix.arch }}.zip
        tag_name: v${{ steps.get_version.outputs.VERSION }}
        name: Release v${{ steps.get_version.outputs.VERSION }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
