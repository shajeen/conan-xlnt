# cpp takes longer
language: minimal
sudo: false
dist: trusty

git:
  depth: false

notifications:
  email: false
  
# set up build matrix
matrix:
  include:
    # ============= GCC ==================
    # gcc-6, c++11, debug build, dynamic linking
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
        - CXX_COMPILER=g++-6
        - C_COMPILER=gcc-6
        - CXX_VER=11
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=OFF
        - SAMPLES=OFF
        
    # gcc-7, c++14, release build, static linking, samples + benchmarks compiled
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - CXX_COMPILER=g++-7
        - C_COMPILER=gcc-7
        - CXX_VER=14
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=ON
        - SAMPLES=ON
        
    # gcc-8, c++17, release build, static linking, samples + benchmarks compiled
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - CXX_COMPILER=g++-8
        - C_COMPILER=gcc-8
        - CXX_VER=17
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=ON
        - SAMPLES=ON

    # =========== CLANG =============
    # clang 4, c++11, release build, dynamic linking
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
        - CXX_COMPILER=clang++-4.0
        - C_COMPILER=clang-4.0
        - CXX_VER=11
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=OFF
        - SAMPLES=OFF
        
    # clang 5, c++14, release build, dynamic linking, samples + benchmarks compiled
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      env:
        - CXX_COMPILER=clang++-5.0
        - C_COMPILER=clang-5.0
        - CXX_VER=14
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=ON
        - SAMPLES=ON
        
    # clang 6, c++17, release build, static linking, samples compiled
    - os: linux
      compiler: clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
      env:
        - CXX_COMPILER=clang++-6.0
        - C_COMPILER=clang-6.0
        - CXX_VER=17
        - BUILD_TYPE=Release
        - COVERAGE=OFF
        - STATIC=ON
        - SAMPLES=ON

    # ============= CODE COVERAGE ===============
    # gcc-6, c++11, debug build, static linking, code coverage enabled
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - lcov
      env:
        - CXX_COMPILER=g++-6
        - C_COMPILER=gcc-6
        - CXX_VER=11
        - BUILD_TYPE=Debug
        - COVERAGE=ON
        - STATIC=ON
        - SAMPLES=OFF
        
before_install:
  - export CC=${C_COMPILER}
  - export CXX=${CXX_COMPILER}

install:
#    - if [ "$QT_BASE" = "48" ]; then sudo apt-get install -qq opt-qt4-qmake opt-qt4-dev-tools; source /opt/qt-4.8/bin/qt-4.8-env.sh; fi
#    - if [ "$QT_BASE" = "51" ]; then sudo apt-get install -qq qt51base; source /opt/qt51/bin/qt51-env.sh; fi
#    - if [ "$QT_BASE" = "52" ]; then sudo apt-get install -qq qt52base; source /opt/qt52/bin/qt52-env.sh; fi
#    - if [ "$QT_BASE" = "53" ]; then sudo apt-get install -qq qt53base; source /opt/qt53/bin/qt53-env.sh; fi
#    - if [ "$QT_BASE" = "54" ]; then sudo apt-get install -qq qt54base; source /opt/qt54/bin/qt54-env.sh; fi
#    - if [ "$QT_BASE" = "55" ]; then sudo apt-get install -qq qt55base; source /opt/qt55/bin/qt55-env.sh; fi
#    - if [ "$QT_BASE" = "56" ]; then sudo apt-get install -qq qt56base; source /opt/qt56/bin/qt56-env.sh; fi
#    - if [ "$QT_BASE" = "57" ]; then sudo apt-get install -qq qt57base; source /opt/qt57/bin/qt57-env.sh; fi
    - sudo apt-get install --yes python python-pip
#    - sudo pip install --upgrade pip
    - sudo pip install conan --ignore-installed enum34
#    - sudo apt-get install -qq g++-5
#    - export CXX="g++-5"

before_script:
    - conan profile new default --detect
    - conan profile update settings.compiler.libcxx=libstdc++11 default
    - conan remote add bintray_ https://api.bintray.com/conan/bincrafters/public-conan 
    - conan remote add conan1 https://api.bintray.com/conan/conan/conan-transit 

script:
    - conan create . test/test 
